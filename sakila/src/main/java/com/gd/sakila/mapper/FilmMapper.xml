<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.FilmMapper">
	<select id="selectFilmList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			l.FID filmId,
			l.title title,
			l.category category,
			l.price price,
			f.rental_duration duration,
			l.length length,
			l.rating rating
		FROM film_list l
		INNER JOIN film f
		ON l.FID = f.film_id
		<where>
			<if test="searchWord != null and selectSearch == 'titleOrActors'">
				AND (l.title LIKE CONCAT('%',#{searchWord},'%') OR l.actors LIKE CONCAT('%',#{searchWord},'%'))
			</if>
			<if test="searchWord != null and selectSearch == 'title'">
				AND l.title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="searchWord != null and selectSearch == 'actors'">
				AND l.actors LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="categoryName != null">
				AND l.category = #{categoryName}
			</if>
			<if test="price != null">
				AND l.price = #{price}
			</if>
			<if test="duration != null">
				AND f.rental_duration = #{duration}
			</if>
			<if test="rating != null">
				AND l.rating = #{rating}
			</if>
		</where>
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectFilmTotal" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM film_list l
		INNER JOIN film f
		ON l.FID = f.film_id
		<where>
			<if test="searchWord != null and selectSearch == 'titleOrActors'">
				AND (l.title LIKE CONCAT('%',#{searchWord},'%') OR l.actors LIKE CONCAT('%',#{searchWord},'%'))
			</if>
			<if test="searchWord != null and selectSearch == 'title'">
				AND l.title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="searchWord != null and selectSearch == 'actors'">
				AND l.actors LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="categoryName != null">
				AND l.category = #{categoryName}
			</if>
			<if test="price != null">
				AND l.price = #{price}
			</if>
			<if test="duration != null">
				AND f.rental_duration = #{duration}
			</if>
			<if test="rating != null">
				AND l.rating = #{rating}
			</if>
		</where>
	</select>
	
	<select id="selectFilmOne" parameterType="Integer" resultType="java.util.Map">
		SELECT 
			l.FID filmId,
			l.title title,
			l.description description,
			l.category category,
			l.price price,
			l.actors actors,
			f.rental_duration duration,
			l.length length,
			l.rating rating,
			YEAR(f.release_year) releaseYear,
			f.special_features specialFeatures
		FROM film_list l
		INNER JOIN film f
		ON l.FID = f.film_id
		WHERE f.film_id = #{filmId}
	</select>
	
	<select id="selectFilmTitleList" parameterType="String" resultType="com.gd.sakila.vo.Film">
		SELECT
			film_id filmId,
			title title
		FROM film
		<where>
			<if test="keyWord != null">
				title LIKE CONCAT('%',#{keyWord},'%')
			</if>
		</where>
	</select>
	
	<select id="selectFilmTitleListByStoreId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			i.inventory_id inventoryId,
			f.film_id filmId,
			f.title title,
			f.rating rating
			<if test="storeId != 0">
				,COUNT(case when i.store_id = #{storeId} and `inventory_in_stock`(i.inventory_id) = 1 then 1 END) 'inStock'
			</if>
			<if test="storeId == 0">
				,COUNT(case when `inventory_in_stock`(i.inventory_id) = 1 then 1 END) 'inStock'
			</if>
		FROM film f
		left join inventory i
		ON i.film_id = f.film_id
		<where>
			<if test="storeId != 0">
				AND i.store_id = #{storeId}
			</if>
			<if test="keyWord != null">
				AND title LIKE CONCAT('%',#{keyWord},'%')
			</if>
		</where>
		GROUP BY title
	</select>
	
	<!-- 프로시저를 호출하는 문법 statementType="CALLABLE" & { call 프로시저명{매개변수}} -->
	<!-- Map : filmId, storeId, filmCount -->
	<select id="selectFilmInStock" parameterType ="java.util.Map" resultType="int" statementType="CALLABLE"> 
		{
			call film_in_stock(
				#{filmId},
				#{storeId},
				#{filmCount, mode=OUT, jdbcType=DECIMAL, javaType=Integer}
			)
		}
	</select>
	
	<insert id="insertFilm" parameterType="com.gd.sakila.vo.Film">
		<selectKey keyProperty="filmId" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO film(
			film_id,
			title,
			description,
			release_year,
			language_id,
			original_language_id,
			rental_duration,
			rental_rate,
			length,
			replacement_cost,
			rating,
			special_features,
			last_update
		) VALUES(
			#{filmId},
			#{title},
			#{description},
			#{releaseYear},
			#{languageId},
			#{originalLanguageId},
			#{rentalDuration},
			#{rentalRate},
			#{length},
			#{replacementCost},
			#{rating},
			#{specialFeatures},
			NOW()
		)
	</insert>
	
	<insert id="insertFilmCategory" parameterType="java.util.Map">
		INSERT INTO film_category(
			film_id,
			category_id
		) VALUES(
			#{filmId},
			#{categoryId}
		)
	</insert>
</mapper>