<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.RentalMapper">
	<select id="selectRentalList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			CONCAT(c.first_name, ' ', c.last_name) name,
			f.title title,
			r.rental_date rentalDate,
			i.store_id storeId,
			case when DATEDIFF(NOW(), r.rental_date) > (f.rental_duration)*2
					then f.rental_rate + DATEDIFF(NOW(), r.rental_date) - f.rental_duration + f.replacement_cost
					when DATEDIFF(NOW(), r.rental_date) > f.rental_duration
					then f.rental_rate + DATEDIFF(NOW(), r.rental_date) - f.rental_duration
			ELSE f.rental_rate
			END 'overdue'
		FROM rental r, inventory i, customer c, film f, payment p
		<where> 
			r.inventory_id = i.inventory_id AND i.film_id = f.film_id AND r.customer_id = c.customer_id 
			AND p.rental_id = r.rental_id AND return_date IS null
			<if test="storeId == 1">
				AND i.store_id = 1
			</if>
			<if test="storeId == 2">
				AND i.store_id = 2
			</if>
			<if test="searchWord != null">
				AND searchWord LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY overdue DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectRentalListTotal" parameterType="java.util.Map" resultType="int">
		SELECT
			COUNT(DISTINCT i.inventory_id)
		FROM rental r, inventory i, customer c, film f, payment p
		<where> 
			r.inventory_id = i.inventory_id AND i.film_id = f.film_id AND r.customer_id = c.customer_id 
			AND p.rental_id = r.rental_id AND return_date IS null
			<if test="storeId == 1">
				AND i.store_id = 1
			</if>
			<if test="storeId == 2">
				AND i.store_id = 2
			</if>
			<if test="searchWord != null">
				AND searchWord LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<insert id="insertRental" parameterType="com.gd.sakila.vo.Rental">
		INSERT INTO rental (
			rental_date,
			inventory_id,
			customer_id,
			staff_id,
			last_update
		) VALUES(
			NOW(),
			#{inventoryId},
			#{customerId},
			#{staffId},
			NOW()
		)
	</insert>
</mapper>